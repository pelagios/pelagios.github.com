define('lib/text!template/annotations.tmpl',[],function () { return '(function() {\n  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};\ntemplates[\'annotations\'] = template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [2,\'>= 1.0.0-rc.3\'];\nhelpers = helpers || Handlebars.helpers; data = data || {};\n  var buffer = "", stack1, stack2, functionType="function", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = "", stack1;\n  buffer += "\\r\\n<li><a href=\\""\n    + escapeExpression(((stack1 = depth0.uri),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + "\\" target=\\"_blank\\">"\n    + escapeExpression(((stack1 = depth0.label),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + "</a></li>\\r\\n";\n  return buffer;\n  }\n\n  buffer += "<ul class=\\"annotations\\" id=\\""\n    + escapeExpression(((stack1 = ((stack1 = depth0.widgetContext),stack1 == null || stack1 === false ? stack1 : stack1.widgetID)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))\n    + "-annotations-";\n  if (stack2 = helpers.subdatasetID) { stack2 = stack2.call(depth0, {hash:{},data:data}); }\n  else { stack2 = depth0.subdatasetID; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }\n  buffer += escapeExpression(stack2)\n    + "\\">\\r\\n";\n  stack2 = helpers.each.call(depth0, depth0.annotation, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack2 || stack2 === 0) { buffer += stack2; }\n  buffer += "\\r\\n</ul>";\n  return buffer;\n  });\n})();';});
